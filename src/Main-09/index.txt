9강. 함수&변수의 유효범위(1)

- 모듈화를 하기위해 재사용을 하고, 응집도는 높아야되고 결합도는 낮아야됨
- 응집도 높고 결합도 낮으면 독립성이 높아짐. 그래서 재사용 하기 쉬움
- 근데 이얘기를 왜하냐 --> 정처기 나오니까

,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,

* 변수는 전역,정적,동적,지역 변수가 있는데
	- 전역변수, 정적변수는 프로그램 끝날때까지 계속 유효
	- 동적변수는 힙영역에 들어감 
	- 지역변수는 중괄호 끝나면 ㅂ2 스택영역에 들어감
	
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,

1. 함수 
 (1) 함수사용 장점
   - 코드 간결성, 소스 수정및 유지보수 용이
   - 프로그램 모듈화, 소스코드 효율성 증대
 (2) 함수선언
   - int                     main      ( )
   - 반환자료형(return type) , 함수이름 , 인수목록(파라미터)
     반환형 없으면 void......
 (3) 함수의 종류
   - 사용자 정의함수 
      * 사용자가 구현하고 싶은 기능 구현한모듈
   - 표준함수 (라이브러리 함수)
      * scanf, printf 등등 이런거 
	  * 기능과 사용법이 c언어 표준으로 정의되어 있는 함수 
  	  * include<stdio.h> 에서 여기안에 정의되어 있는 함수 
	  <1> 표준함수 종류
	     - stdio.h(printf,scanf,getchar..) : 입출력 관련함수
		 - stdlib.h(atoi,itoa,random..) : 수치변환, 난수관련
		 - string.h(strcat,strcmp,strcpy): 문자열관련 함수
		 - ctype.h(isalnum,isalpha,isdigit) : 문자판별,변환함수
		 - math.h(sin,cos,tan,sqrt..): 수학함수
		 - complex.h(creal,cimag,cabs..) :복소수 관련함수 (?)
		 - conio.h(getch,putch): 콘솔입출력함수
		 - malloc.h(calloc,malloc,realoc..) : 동적메모리할당함수
		 - process.h(abort,exit,execle,system..) : 프로세스제어함수
		 - memory.h(memcpy,memcmp,memset) :메모리변경함수
 (4) 자료의 전달방법
   - 값에 의한 호출
   	  * 함수에서 값을 복사해서 전달하는 방식.(call by value)
	  	(그 전형적으로, int sum(itn a, int b) 해서main에 (10,20
		 이렇게 전닳하는건))
	  * 인자로 전달되는 변수를 함수의 매개변수에 복사함
	  * 전달한 변수와 인자로 복사된 변수는 별대의 변수로 사용됨.
	  
  
