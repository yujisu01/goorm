Chapter01. 프로그램 언어특성및 C언어 구조 
 
 	1. 프로그램?
 	 - 어떤 문제를 해결하기 위해 컴터에게 처리방법과 순서를 기술한 일련의 명령문 집합
 	 
 	2. 프로그래밍 언어의 유형분류
 	 [1] 개발 편의성 측면에 따른 분류
	 	 (1) 저급언어
	 	  - 컴퓨터가 직접이해할수 있는 언어
	 	  - 실행속도 빠르나, 기계마다 호환성 없고 유지관리 어려움
	 	 (2) 고급언어
	 	  - 인간이 이해할수 있는 언어
	 	  - 실행을 위해 저급언어로 번역하는 과정 필요
 	 [2] 실행및 구현방식에 따른분류
 	 	(1) 명령형 언어(imperative language)
 	 	 - 컴터가 동작해야할 절차를 통해 프로그래밍 상태 변경시키는 구문에 중점둠
 	 	 - 포트란, C
 	 	(2) 함수형 언어 (Functional)
 	 	 - LISP, Scala
 	 	(3) 논리형 언어 (logic)
 	 	 - prolog
 	 	(4) 객체지향 (Object oriented)
 	 	 - java, c++ 등
 	 [3] 빌드방식에 따른 분류
 	 	(1) 컴파일 언어
 	 	 - 소스코드를 목적코드로 변환하여 실행
 	 	 - 소스코드를 컴터가 이해할수 있는 언어로 번역
 	 	 - c, c++
 	 	(2) 인터프리터 언어
 	 	 - 소스코드 한줄씩 실행
 	 	 - 소스코드를 컴터가 이해할수 있는 언어로 통역을 함
 	 	 - 파이썬 ,BASIC
 	 	(3) 바이트코드 언어
 	 	 - 컴파일을 통해 가상머신이 번역할수 있는 byte code로 변환,
 	 	   가상머신이 기계어로 번역
 	 	 - java, scala
 	 	 
	3. 절차적 프로그래밍 언어 
	 [1] 절차적 프로그래밍 언어 개념
	  - 말그대로 절차적으로 함
	  - 프로시저(루틴,서브루틴,메서드,함수)를 이용하여 작성하는 프로그래밍
	 [2] 장/단점
	  	(1) 장점
	  	 - 함수를 통해 코드 재활용성 높아짐
	  	 - 컴터 처리구조와 유사하며 실행속도 빨라짐 (절차대로 하는거니까)
	  	(2) 단점
	  	 - 분석 어려움
	  	 - 유지보수, 코드수정 어려움;
	 [3] 절차적 언어의 종류
	 	(1) C언어
	 	 - 1972년 데니스리치에 의해 개발
	 	 - 운영체제 작성하기 위한 시스템 프로그래밍 언어로 개발
	 	 - 이식성 좋음
	 	(2) cobol
	 	 - 금융 비즈니스 컴퓨터
	 	 - 4개의 division
	 	(3) 포트란
	 	 - 과학 계산용
	 	(4) basic
	 	 - 교육용, 언어 문법 쉬움
	 	 
	4. 객체지향 프로그래밍 언어
	 [1] 개념
	  - 객체들끼리 상호작용함
	 [2] 특징 (캡추다정상)
	  	(1) 캡슐화 (encapsulation)
	  	 - 데이터와 연산을 하나로 묶어 캡슐처럼 만듬
	  	 - 외부에 은폐되는거
	  	 - 캡슐화된 객체들은 재사용 쉬움
	  	(2) 추상화 (abstraction)
	  	 - 불필요한 부분 생략하고, 가장 중요한것에만 중점 둬서 개략화 함
	  	(3) 다형성 (polymorphism)
	  	 - 오버로딩, 오버라이딩이 있다
	  	 - 메세지를 통해 연산을 수행할때, 같은 이름을 가진 여러메서드중 특정메서드가 호출되는 것
	  	(4) 정보은닉 (information hiding)
	  	 - 다른 객체에게 정보 숨김, 자신 연산만을 통해 접근 허용
	  	(5) 상속 (inheritance)
	  	 - 말그대로 물려받는거
	  	 - private 외의 모든 내용을 상속가능
	  	 - extends 써서 사용함
	  [3] 객체지향 장/단점
	  	(1) 장점
	  	 - 재사용 용이
	  	 - 생산성 향상
	  	 - 자연적인 모델링
	  	 - 유지보수 우수 (c언어는 어려움)
	  	(2) 단점
	  	 - 개발 속도느림
	  	 - 실행속도 느림
	  	 - 코딩 난이도 상승 (c언어는 분석쉬움)
	  [4] 객체지향 언어 종류
	  	(1) java : 대표적
	  	(2) 시뮬라67 : 최초임
	  	(3) 스몰토크 : 최초로 gui 제공
	  	(4) Objective-C : iOS 에서 사용
	  	(5) C++ : C언어에서 객체지향성 한스푼
	  	(6) 파이썬 : 플랫폼이 독립적이며, 인터프리터식, 객체지향적, 동적타이핑 대화형 언어
	
	5. 스크립트언어 
	 [1] 개념
	  - 응용 소프트웨어를 제어하는 언어
	  - 다른 응용프로그램에 삽입되서 동작함
	  - 최종사용자가 응용프로그램 동작을 사용자의 요구에 맞게 수행할수 있게 해줌
	 [2] 종류
	 	(1) 자바스크립트 
	 	 - html문서에 삽입, 동적 페이지 만듬
	 	(2) jsp
	 	 - Java Server Page
	 	 - html페이지 안에 자바코드 직접삽입해서 웹서버에서 동적으로 웹페이지 생성함.
	 	   웹 브라우저가 표현할수 있도록 전달해주는 스크립트 언어
	 	(3) php
	 	 - html문서에 삽입, 서버측 스크립트 언어
	 	 - 리눅스 운영체제에 아파치(Apache)웹서버를 설치, MySQL DB환경에서 주로 사용됨
	 	(4) asp
	 	 - Microsoft Windows 서버에서 운영되는 스크립트 언어
	 	(5) Perl
	 	 - 유닉스계열 운영체제에서 사용하는 스크립트 언어
	 	(6) Python
	 	 - 플랫폼이 독립적이며, 인터프리터식, 객체지향적, 동적타이핑 대화형 언어
	 	 - 네덜란드의 귀도반로썸 이 만듬
	 	 - 별도의 컴파일 과정 필요없음
	 	 - 리눅스나 윈도우등 특정플랫폼에 독립적임
	 	(7) VBscript
	 	 - Microsoft Visual Basic(비주얼베이직) 기반의 스크립트 언어
	 	 
	 6. 선언형언어
	  [1] 개념
	   - 프로그램에 수행해야하는 문제를 기술하는 언어
	   - 가독성, 재사용성 좋고 오류가 적다
	   - 목표를 명시하고, 알고리즘은 명시하지 않는다
	  [2] 종류
	   	(1) 하스켈
	   	 - 함수형
	   	(2) html
	   	 - 웹콘텐츠의 의미와 구조를 정의할떄 사용
	   	(3) sql
	   	 - 데이터 관리를 위한 특수목적 언어
	   	 
	7. C언어의 특징과 프로그램 완성과정
	 [1] 특징
	  - 논리적이며, 구조적인 언어
	  - 하드웨어 제어가 가능
	  - 프로그램 이식성 높음
	  - 간략한문법 표현으로 함축적인 프로그램 작성이 쉬움
	  - 저급언어 특성을 가진 고급언어다
	 [2] 프로그램 컴파일 과정
	 	helloworld.c 
	 					전처리기(Preprocessor) : 헤더파일 삽입, 매크로 치환및 적용
	 	helloworld.i
	 					컴파일러 : 고수준언어를 저수준언어로 나타내는 역할
	 	helloworld.s
	 					어셈블러 : 완전히 기계어로 바꿔줌
	 	helloworld.o
	 					링커 : 여러개의 오프젝트파일을 하나로 합치거나 라이브러리를 합침
	 	helloworld
	 	실행파일
	 [3] 기본구조
	 	
	 	도입부
	 	
	 	void main(){
	 		선언문
	 		처리문
	 		제어문
	 		함수호출
	 	}
	 	
	 	함수(){
	 		특정동작수행
	 	}
	 
 	 